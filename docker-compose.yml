version: "3.7"

services:
  nestjs-project:
    build: .
    ports:
      - 3000:3000
#      - 9229:9229
      - 13000:13000
    environment:
      DB_URL: mongodb://db/db_name
#      redis://<username>:<password>@<host>:<port>
      REDIS_URL: redis://default:password@redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: password
      REDIS_USERNAME: default
#      postgres://username:password@host:port/database_name
      DATABASE_URL: postgres://username:password@postgres:5432/nestjs_app
      RABBITMQ_URL: amqp://rabbitmq:5672
      ENABLE_REDIS_CACHE_FOR_TYPEORM: true
      NODE_ENV: development
    volumes:
      - nestjs-project:/usr/src/appsrc
  redis:
    image: redis
    command: redis-server --requirepass password
    ports:
      - 6379:6379
  postgres:
    ports:
      - 5432:5432
    build: postgres
    environment:
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./tmp/pgdata/nestjs_app:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  broker:
    image: confluentinc/cp-kafka:latest
    container_name: nestjs-broker
    ports:
      - '9092:9092'
      - '19092:19092'
    depends_on:
      - 'zookeeper'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092, CONNECTIONS_FROM_HOST://broker:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: nestjs-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - '8080:8080'
    depends_on:
      - 'broker'
    environment:
      KAFKA_CLUSTERS_0_NAME: broker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:9092'
volumes: 
  nestjs-project:
